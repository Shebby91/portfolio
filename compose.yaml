services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html
    environment:
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - DATABASE_URL=${DATABASE_URL}
      - AWS_ENDPOINT=${AWS_ENDPOINT}
    networks:
      - backend
    ports:
      - "8080:80"
    depends_on:
      - db_prod
      - db_test
      - mailer
      - localstack
      - elasticsearch
      - logstash
      - kibana
    extra_hosts:
      - "elasticsearch:host-gateway" # Kommunikation mit Elasticsearch sicherstellen

  db_prod:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: prodpassword
      MYSQL_DATABASE: prodapp
      MYSQL_USER: produser
      MYSQL_PASSWORD: prodpassword
    volumes:
      - db_prod_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - backend
#By adding networks: -backend make:migration command can only be executed in the container directly
  db_test:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: testpassword
      MYSQL_DATABASE: testapp
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpassword
    volumes:
      - db_test_data:/var/lib/mysql
    ports:
      - "3308:3306"
    networks:
      - backend

  mailer:
    image: axllent/mailpit
    ports:
      - "1025:1025"
      - "8025:8025"
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - backend

  messenger:
    image: portfolio-app
    command: ["php", "bin/console", "messenger:consume", "async"]
    restart: always
    networks:
      - backend

  localstack:
    image: localstack/localstack:latest
    environment:
      - SERVICES=s3
      - AWS_DEFAULT_REGION=us-east-1
      - DEBUG=1
    ports:
      - "4566:4566"  # LocalStack Gateway f√ºr alle Dienste
      - "4572:4572"  # S3
    volumes:
      - "./localstack:/var/lib/localstack"
    networks:
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.13
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - backend

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.13
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
    networks:
      - backend

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.13
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - backend

volumes:
  db_prod_data:
  db_test_data:
  esdata:

networks:
  backend:
    driver: bridge